Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21

Thinking:
1. x is given 32-bit integer, overflow should be considered - whether x is bigger than 2147483647, which is 2^31.
2. x can be positive or negative
3. if the unit digit is 0, x cannot be reversed directly
eg: x = 328
for the while loop below, 
1st round: answer = 0+8=8; x=328//10=32
2nd round: answer = 80+2=82; x=32//10=3
3rd round: answer = 820+3=823; x=3//10=0
the loop ends

class Solution:
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        answer = 0
        sign = 1 if x > 0 else -1
        x = abs(x)
        while x > 0:
            answer = answer*10 + x%10
            x //= 10     # 整数除
        return 0 if answer > 2147483647 else sign*answer
