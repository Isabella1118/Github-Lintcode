Implement pow(x, n), which calculates x raised to the power n (xn).

Example 1:

Input: 2.00000, 10
Output: 1024.00000
Example 2:

Input: 2.10000, 3
Output: 9.26100
Example 3:

Input: 2.00000, -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25
Note:

-100.0 < x < 100.0
n is a 32-bit signed integer, within the range [−231, 231 − 1]

Thinking: Binary Search

Solution:

class Solution:
    def myPow(self, x, n):
        """
        :type x: float
        :type n: int
        :rtype: float
        """
        
        #必须要有0，不然没有初始条件
        if n==0:
            return 1
        if n<0:
            return self.myPow(1/x,-n) #只要把x倒转，n变为正数，就能当作n>0递归做了
        if n%2==0:
            return self.myPow(x*x,n/2)
        if n%2==1:
            return x*self.myPow(x*x,n/2) #注意前面的x要实时更新
