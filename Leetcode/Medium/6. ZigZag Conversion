The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:

P     I    N
A   L S  I G
Y A   H R
P     I

Thinking: 从第一列第一个字母开始从上往下到底（numRows-1），第二列则从下往上到顶（0），第三列开始再从上往下，依次按zigzag的形状反复。因为最后只需要
输出string，所以只要找到规律，竖着的N形状就是横着的Z形状，step=1叠加即可。

Solution:

class Solution(object):
    def convert(self, s, numRows):
        """
        :type s: str
        :type numRows: int
        :rtype: str
        """
        if numRows == 1 or numRows > len(s):
            return s
        res = ['']*numRows
        idx, step = 0, 1
        
        for x in s:
            res[idx] += x
            if idx == 0:  #第一行，一直向下走
                step = 1
            elif idx == numRows - 1:     #最后一行了，向上走
                step = -1
            idx += step
        return ''.join(res)
