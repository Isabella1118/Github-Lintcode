Triangle Count

Given an array of integers, how many three numbers can be found in the array, 
so that we can build an triangle whose three edges length is the three numbers that we find?

Example

Given array S = [3,4,6,7], return 3. They are:
[3,4,6]
[3,6,7]
[4,6,7]

Given array S = [4,4,4,4], return 4. They are:
[4(1),4(2),4(3)]
[4(1),4(2),4(4)]
[4(1),4(3),4(4)]
[4(2),4(3),4(4)]

class Solution:
    """
    @param S: A list of integers
    @return: An integer
    """
    def triangleCount(self, S):
        edges = sorted(S, reverse = True)
        sum = 0
        for index, longest in enumerate(edges):
            i = index + 1
            j = index + 2
            while j < len(edges) and edges[i] + edges[j] > longest:
                j += 1
            j -= 1
            while i < j:
                sum += j - i
                i += 1
                while i < j and edges[i] + edges[j] <= longest:
                    j -= 1
        return sum
