Description
Given a list of numbers with duplicate number in it. Find all unique permutations.
  
Example
For numbers [1,2,2] the unique permutations are:

[
  [1,2,2],
  [2,1,2],
  [2,2,1]
]

Thinking: 这道题是上一题 Permutations 的加强版，现在要考虑重复的数字了，
采用了偷懒的办法，先把数组排序，遍历时直接无视重复的数字，在原来的基础上只要添加两行代码。

Solution:

class Solution:
    """
    @param: :  A list of integers
    @return: A list of unique permutations
    """

    def permuteUnique(self, nums):
        result = []
        #把数组排序
        nums.sort()
        self.get_permutate([], nums, result)
        return result
        
    def get_permutate(self, current, num, result):
        if not num:
            result.append(current + [])
        for i,v in enumerate(num):
            # 无视重复的数字
            if i - 1 >= 0 and num[i] == num[i-1]:
                continue
            current.append(num[i])
            self.get_permutate(current, num[:i] + num[i+1:], result)
            current.pop()
