Description

Given two lists A and B, and B is an anagram of A. B is an anagram of A means B is made by randomizing the order of the elements in A.

We want to find an index mapping P, from A to B. A mapping P[i] = j means the ith element in A appears in B at index j.

These lists A and B may contain duplicates. If there are multiple answers, output any of them.

https://leetcode.com/problems/find-anagram-mappings/description/

A, B have equal lengths in range [1, 100].
A[i], B[i] are integers in range [0, 10^5].

Thinking: 
用index()很快. 
The index() method searches an element in the list and returns its index.

Solution:

class Solution:
    """
    @param A: lists A
    @param B: lists B
    @return: the index mapping
    """
    def anagramMappings(self, A, B):
        # Write your code here
        if not A:
            return []
        res = []
        for i in A:
            res.append(B.index(i))
        return res
